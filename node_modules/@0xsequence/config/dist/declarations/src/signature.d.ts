import { BytesLike, ethers } from "ethers";
import { WalletConfig } from ".";
export declare type DecodedSignature = {
    threshold: number;
    signers: DecodedSignaturePart[];
};
export declare type DecodedSignaturePart = DecodedAddressPart | DecodedEOASigner | DecodedEOASplitSigner | DecodedFullSigner;
export declare type DecodedAddressPart = {
    weight: number;
    address: string;
};
export declare type DecodedEOASigner = {
    weight: number;
    signature: ethers.BytesLike;
};
export declare type DecodedEOASplitSigner = {
    weight: number;
    r: string;
    s: string;
    v: number;
    t: number;
};
export declare type DecodedFullSigner = {
    weight: number;
    address: string;
    signature: ethers.BytesLike;
};
export declare function isDecodedAddress(cand: DecodedSignaturePart): cand is DecodedAddressPart;
export declare function isDecodedSigner(cand: DecodedSignaturePart): cand is DecodedEOASigner | DecodedEOASplitSigner | DecodedFullSigner;
export declare function isDecodedEOASigner(cand: DecodedSignaturePart): cand is DecodedEOASigner;
export declare function isDecodedEOASplitSigner(cand: DecodedSignaturePart): cand is DecodedEOASplitSigner;
export declare function isDecodedFullSigner(cand: DecodedSignaturePart): cand is DecodedFullSigner;
export declare enum SignatureType {
    EOA = 0,
    Address = 1,
    Full = 2
}
export declare const decodeSignature: (signature: string | DecodedSignature) => DecodedSignature;
export declare const splitDecodedEOASigner: (sig: DecodedEOASigner) => DecodedEOASplitSigner;
export declare const recoverEOASigner: (digest: BytesLike, sig: DecodedEOASigner | DecodedEOASplitSigner) => string;
export declare const joinSignatures: (...signatures: Array<DecodedSignature | string>) => DecodedSignature;
export declare const joinTwoSignatures: (a: DecodedSignature, b: DecodedSignature) => DecodedSignature;
export declare const encodeSignature: (sig: DecodedSignature | string) => string;
export declare function signerOf(part: DecodedSignaturePart, digest: BytesLike): string;
export declare function mutateSignature(sig: DecodedSignature, config: WalletConfig, digest: BytesLike): DecodedSignature;
export declare function buildStubSignature(provider: ethers.providers.Provider, config: WalletConfig): Promise<DecodedSignature>;
