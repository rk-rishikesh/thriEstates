{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction throttledQueue(maxRequestsPerInterval, interval, evenlySpaced) {\n  if (evenlySpaced === void 0) {\n    evenlySpaced = false;\n  }\n  /**\n   * If all requests should be evenly spaced, adjust to suit.\n   */\n\n\n  if (evenlySpaced) {\n    interval = interval / maxRequestsPerInterval;\n    maxRequestsPerInterval = 1;\n  }\n\n  var queue = [];\n  var lastIntervalStart = 0;\n  var numRequestsPerInterval = 0;\n  var timeout;\n  /**\n   * Gets called at a set interval to remove items from the queue.\n   * This is a self-adjusting timer, since the browser's setTimeout is highly inaccurate.\n   */\n\n  var dequeue = function () {\n    var intervalEnd = lastIntervalStart + interval;\n    var now = Date.now();\n    /**\n     * Adjust the timer if it was called too early.\n     */\n\n    if (now < intervalEnd) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      timeout !== undefined && clearTimeout(timeout);\n      timeout = setTimeout(dequeue, intervalEnd - now);\n      return;\n    }\n\n    lastIntervalStart = now;\n    numRequestsPerInterval = 0;\n\n    for (var _i = 0, _a = queue.splice(0, maxRequestsPerInterval); _i < _a.length; _i++) {\n      var callback = _a[_i];\n      numRequestsPerInterval++;\n      void callback();\n    }\n\n    if (queue.length) {\n      timeout = setTimeout(dequeue, interval);\n    } else {\n      timeout = undefined;\n    }\n  };\n\n  return function (fn) {\n    return new Promise(function (resolve, reject) {\n      var callback = function () {\n        return Promise.resolve().then(fn).then(resolve).catch(reject);\n      };\n\n      var now = Date.now();\n\n      if (timeout === undefined && now - lastIntervalStart > interval) {\n        lastIntervalStart = now;\n        numRequestsPerInterval = 0;\n      }\n\n      if (numRequestsPerInterval++ < maxRequestsPerInterval) {\n        void callback();\n      } else {\n        queue.push(callback);\n\n        if (timeout === undefined) {\n          timeout = setTimeout(dequeue, lastIntervalStart + interval - now);\n        }\n      }\n    });\n  };\n}\n\nmodule.exports = throttledQueue;\nexports.default = throttledQueue;","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,cAAT,CACEC,sBADF,EAEEC,QAFF,EAGEC,YAHF,EAGsB;EAApB;IAAAA;EAAoB;EAEpB;;;;;EAGA,IAAIA,YAAJ,EAAkB;IAChBD,QAAQ,GAAGA,QAAQ,GAAGD,sBAAtB;IACAA,sBAAsB,GAAG,CAAzB;EACD;;EACD,IAAMG,KAAK,GAA+B,EAA1C;EACA,IAAIC,iBAAiB,GAAG,CAAxB;EACA,IAAIC,sBAAsB,GAAG,CAA7B;EACA,IAAIC,OAAJ;EACA;;;;;EAIA,IAAMC,OAAO,GAAG;IACd,IAAMC,WAAW,GAAGJ,iBAAiB,GAAGH,QAAxC;IACA,IAAMQ,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;IACA;;;;IAGA,IAAIA,GAAG,GAAGD,WAAV,EAAuB;MACrB;MACAF,OAAO,KAAKK,SAAZ,IAAyBC,YAAY,CAACN,OAAD,CAArC;MACAA,OAAO,GAAGO,UAAU,CAACN,OAAD,EAAUC,WAAW,GAAGC,GAAxB,CAApB;MACA;IACD;;IACDL,iBAAiB,GAAGK,GAApB;IACAJ,sBAAsB,GAAG,CAAzB;;IACA,KAAuB,sBAAK,CAACS,MAAN,CAAa,CAAb,EAAgBd,sBAAhB,CAAvB,EAAuBe,cAAvB,EAAuBA,IAAvB,EAAgE;MAA3D,IAAMC,QAAQ,SAAd;MACHX,sBAAsB;MACtB,KAAKW,QAAQ,EAAb;IACD;;IACD,IAAIb,KAAK,CAACc,MAAV,EAAkB;MAChBX,OAAO,GAAGO,UAAU,CAACN,OAAD,EAAUN,QAAV,CAApB;IACD,CAFD,MAEO;MACLK,OAAO,GAAGK,SAAV;IACD;EACF,CAvBD;;EAyBA,OAAO,UAAmBO,EAAnB,EAAqD;IAAsB,WAAIC,OAAJ,CAChF,UAACC,OAAD,EAAUC,MAAV,EAAgB;MACd,IAAML,QAAQ,GAAG;QAAM,cAAO,CAACI,OAAR,GAAkBE,IAAlB,CAAuBJ,EAAvB,EAA2BI,IAA3B,CAAgCF,OAAhC,EAAyCG,KAAzC,CAA+CF,MAA/C;MAAsD,CAA7E;;MACA,IAAMZ,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;MACA,IAAIH,OAAO,KAAKK,SAAZ,IAA0BF,GAAG,GAAGL,iBAAP,GAA4BH,QAAzD,EAAmE;QACjEG,iBAAiB,GAAGK,GAApB;QACAJ,sBAAsB,GAAG,CAAzB;MACD;;MACD,IAAIA,sBAAsB,KAAKL,sBAA/B,EAAuD;QACrD,KAAKgB,QAAQ,EAAb;MACD,CAFD,MAEO;QACLb,KAAK,CAACqB,IAAN,CAAWR,QAAX;;QACA,IAAIV,OAAO,KAAKK,SAAhB,EAA2B;UACzBL,OAAO,GAAGO,UAAU,CAACN,OAAD,EAAUH,iBAAiB,GAAGH,QAApB,GAA+BQ,GAAzC,CAApB;QACD;MACF;IACF,CAhB+E;EAiBjF,CAjBD;AAkBD;;AACDgB,MAAM,CAACC,OAAP,GAAiB3B,cAAjB;AACA2B,kBAAe3B,cAAf","names":["throttledQueue","maxRequestsPerInterval","interval","evenlySpaced","queue","lastIntervalStart","numRequestsPerInterval","timeout","dequeue","intervalEnd","now","Date","undefined","clearTimeout","setTimeout","splice","_i","callback","length","fn","Promise","resolve","reject","then","catch","push","module","exports"],"sourceRoot":"","sources":["../src/throttledQueue.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}