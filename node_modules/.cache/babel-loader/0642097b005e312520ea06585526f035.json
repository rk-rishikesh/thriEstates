{"ast":null,"code":"import { Base64 } from 'js-base64';\nimport { ethers, BigNumber } from 'ethers';\nexport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from '@ethersproject/properties';\nimport { isHexString, isBytes } from 'ethers/lib/utils';\n\nconst base64Encode = val => {\n  return Base64.encode(val, true);\n};\n\nconst base64EncodeObject = obj => {\n  return Base64.encode(JSON.stringify(obj), true);\n};\n\nconst base64Decode = encodedString => {\n  if (encodedString === null || encodedString === undefined) {\n    return undefined;\n  }\n\n  return Base64.decode(encodedString);\n};\n\nconst base64DecodeObject = encodedObject => {\n  if (encodedObject === null || encodedObject === undefined) {\n    return undefined;\n  }\n\n  return JSON.parse(Base64.decode(encodedObject));\n};\n\nconst encodeMessageDigest = message => {\n  if (typeof message === 'string') {\n    return ethers.utils.arrayify(ethers.utils.keccak256(ethers.utils.toUtf8Bytes(message)));\n  } else {\n    return ethers.utils.arrayify(ethers.utils.keccak256(message));\n  }\n}; // packMessageData encodes the specified data ready for the Sequence Wallet contracts.\n\n\nconst packMessageData = (walletAddress, chainId, digest) => {\n  return ethers.utils.solidityPack(['string', 'uint256', 'address', 'bytes32'], ['\\x19\\x01', chainId, walletAddress, digest]);\n};\n\nconst subDigestOf = (address, chainId, digest) => {\n  return ethers.utils.keccak256(packMessageData(address, chainId, digest));\n};\n\nconst isNode = () => {\n  if (typeof window === 'undefined' && typeof process === 'object') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst isBrowser = () => !isNode();\n\nconst jwtDecodeClaims = jwt => {\n  const parts = jwt.split('.');\n\n  if (parts.length !== 3) {\n    throw new Error('invalid jwt');\n  }\n\n  const claims = JSON.parse(Base64.decode(parts[1]));\n  return claims;\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar logLevel;\n\n(function (logLevel) {\n  logLevel[logLevel[\"DEBUG\"] = 1] = \"DEBUG\";\n  logLevel[logLevel[\"INFO\"] = 2] = \"INFO\";\n  logLevel[logLevel[\"WARN\"] = 3] = \"WARN\";\n  logLevel[logLevel[\"ERROR\"] = 4] = \"ERROR\";\n  logLevel[logLevel[\"DISABLED\"] = 5] = \"DISABLED\";\n})(logLevel || (logLevel = {}));\n\nclass Logger {\n  constructor(config) {\n    this.config = config;\n    this.logLevel = void 0;\n    this.configure(config);\n  }\n\n  configure(config) {\n    this.config = _extends({}, this.config, config);\n\n    switch (this.config.logLevel) {\n      case 'DEBUG':\n        this.logLevel = logLevel.DEBUG;\n        break;\n\n      case 'INFO':\n        this.logLevel = logLevel.INFO;\n        break;\n\n      case 'WARN':\n        this.logLevel = logLevel.WARN;\n        break;\n\n      case 'ERROR':\n        this.logLevel = logLevel.ERROR;\n        break;\n\n      case 'DISABLED':\n        this.logLevel = logLevel.DISABLED;\n        break;\n\n      default:\n        this.logLevel = logLevel.INFO;\n        break;\n    } // undefined silence value will disable the default silence flag\n\n\n    if (this.config.silence === undefined) {\n      this.config.silence = false;\n    }\n  }\n\n  debug(message) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel === logLevel.DEBUG) {\n      for (var _len = arguments.length, optionalParams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        optionalParams[_key - 1] = arguments[_key];\n      }\n\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  info(message) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.INFO) {\n      for (var _len2 = arguments.length, optionalParams = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        optionalParams[_key2 - 1] = arguments[_key2];\n      }\n\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  warn(message) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.WARN) {\n      for (var _len3 = arguments.length, optionalParams = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        optionalParams[_key3 - 1] = arguments[_key3];\n      }\n\n      console.warn(message, ...optionalParams);\n\n      if (this.config.onwarn) {\n        this.config.onwarn(message, optionalParams);\n      }\n    }\n  }\n\n  error(message) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.ERROR) {\n      for (var _len4 = arguments.length, optionalParams = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        optionalParams[_key4 - 1] = arguments[_key4];\n      }\n\n      console.error(message, ...optionalParams);\n\n      if (this.config.onerror) {\n        this.config.onerror(message, optionalParams);\n      }\n    }\n  }\n\n}\n\nconst logger = new Logger({\n  logLevel: 'INFO',\n  // By default we silence the logger. In tests we should call `configureLogger`\n  // below to set silence: false.\n  silence: true\n});\n\nconst configureLogger = config => logger.configure(config);\n\nfunction promisify(f, thisContext) {\n  return function () {\n    for (var _len5 = arguments.length, a = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      a[_key5] = arguments[_key5];\n    }\n\n    const args = Array.prototype.slice.call(a);\n    return new Promise(async (resolve, reject) => {\n      try {\n        args.push((err, result) => err ? reject(err) : resolve(result));\n        await f.apply(thisContext, args);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n}\n\nconst getRandomInt = function () {\n  let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_SAFE_INTEGER;\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction queryStringFromObject(name, obj) {\n  const k = encodeURIComponent(name);\n  const v = encodeURIComponent(JSON.stringify(obj));\n  return `${k}=${v}`;\n}\n\nfunction queryStringToObject(qs) {\n  const p = qs.split('&');\n  const o = {};\n\n  for (const v of p) {\n    const z = v.split('=');\n    o[decodeURIComponent(z[0])] = JSON.parse(decodeURIComponent(z[1]));\n  }\n\n  return o;\n} // sanitizeNumberString accepts a number string and returns back a clean number string.\n// For example, input '1234.5678' will return '1234.5678' but '12javascript:{}etc' will return '12'\n\n\nconst sanitizeNumberString = numString => {\n  if (!numString || typeof numString !== 'string') {\n    return '';\n  }\n\n  const v = numString.match(/[\\d.]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n}; // sanitizeAlphanumeric accepts any string and returns alphanumeric contents only\n\n\nconst sanitizeAlphanumeric = alphanum => {\n  if (!alphanum || typeof alphanum !== 'string') {\n    return '';\n  }\n\n  const v = alphanum.match(/[\\w\\s\\d]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n}; // sanitizeHost accepts any string and returns valid host string\n\n\nconst sanitizeHost = host => {\n  if (!host || typeof host !== 'string') {\n    return '';\n  }\n\n  const v = host.match(/[\\w\\d.\\-:\\/]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n};\n\nconst sleep = t => {\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      clearTimeout(timeout);\n      resolve();\n    }, t);\n  });\n};\n\nconst encodeTypedDataHash = typedData => {\n  const types = _extends({}, typedData.types); // remove EIP712Domain key from types as ethers will auto-gen it in\n  // the hash encoder below\n\n\n  delete types['EIP712Domain'];\n  return ethers.utils._TypedDataEncoder.hash(typedData.domain, types, typedData.message);\n};\n\nconst encodeTypedDataDigest = typedData => {\n  return ethers.utils.arrayify(encodeTypedDataHash(typedData));\n}; // urlClean removes double slashes from url path\n\n\nconst urlClean = url => url.replace(/([^:]\\/)\\/+/g, '$1');\n\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n}\n\nexport { Logger, base64Decode, base64DecodeObject, base64Encode, base64EncodeObject, configureLogger, encodeMessageDigest, encodeTypedDataDigest, encodeTypedDataHash, getRandomInt, isBigNumberish, isBrowser, isNode, jwtDecodeClaims, logger, packMessageData, promisify, queryStringFromObject, queryStringToObject, sanitizeAlphanumeric, sanitizeHost, sanitizeNumberString, sleep, subDigestOf, urlClean };","map":{"version":3,"names":["Base64","ethers","BigNumber","checkProperties","deepCopy","defineReadOnly","getStatic","resolveProperties","shallowCopy","isHexString","isBytes","base64Encode","val","encode","base64EncodeObject","obj","JSON","stringify","base64Decode","encodedString","undefined","decode","base64DecodeObject","encodedObject","parse","encodeMessageDigest","message","utils","arrayify","keccak256","toUtf8Bytes","packMessageData","walletAddress","chainId","digest","solidityPack","subDigestOf","address","isNode","window","process","isBrowser","jwtDecodeClaims","jwt","parts","split","length","Error","claims","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","logLevel","Logger","constructor","config","configure","DEBUG","INFO","WARN","ERROR","DISABLED","silence","debug","optionalParams","console","log","info","warn","onwarn","error","onerror","logger","configureLogger","promisify","f","thisContext","a","args","Array","slice","Promise","resolve","reject","push","err","result","e","getRandomInt","min","max","Number","MAX_SAFE_INTEGER","Math","ceil","floor","random","queryStringFromObject","name","k","encodeURIComponent","v","queryStringToObject","qs","p","o","z","decodeURIComponent","sanitizeNumberString","numString","match","trim","sanitizeAlphanumeric","alphanum","sanitizeHost","host","sleep","t","timeout","setTimeout","clearTimeout","encodeTypedDataHash","typedData","types","_TypedDataEncoder","hash","domain","encodeTypedDataDigest","urlClean","url","replace","isBigNumberish","value","isBigNumber"],"sources":["C:/Users/rishi/contract-poc/ThriEstate/Brandvilla/node_modules/@0xsequence/utils/dist/0xsequence-utils.esm.js"],"sourcesContent":["import { Base64 } from 'js-base64';\nimport { ethers, BigNumber } from 'ethers';\nexport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from '@ethersproject/properties';\nimport { isHexString, isBytes } from 'ethers/lib/utils';\n\nconst base64Encode = val => {\n  return Base64.encode(val, true);\n};\nconst base64EncodeObject = obj => {\n  return Base64.encode(JSON.stringify(obj), true);\n};\nconst base64Decode = encodedString => {\n  if (encodedString === null || encodedString === undefined) {\n    return undefined;\n  }\n\n  return Base64.decode(encodedString);\n};\nconst base64DecodeObject = encodedObject => {\n  if (encodedObject === null || encodedObject === undefined) {\n    return undefined;\n  }\n\n  return JSON.parse(Base64.decode(encodedObject));\n};\n\nconst encodeMessageDigest = message => {\n  if (typeof message === 'string') {\n    return ethers.utils.arrayify(ethers.utils.keccak256(ethers.utils.toUtf8Bytes(message)));\n  } else {\n    return ethers.utils.arrayify(ethers.utils.keccak256(message));\n  }\n}; // packMessageData encodes the specified data ready for the Sequence Wallet contracts.\n\nconst packMessageData = (walletAddress, chainId, digest) => {\n  return ethers.utils.solidityPack(['string', 'uint256', 'address', 'bytes32'], ['\\x19\\x01', chainId, walletAddress, digest]);\n};\nconst subDigestOf = (address, chainId, digest) => {\n  return ethers.utils.keccak256(packMessageData(address, chainId, digest));\n};\n\nconst isNode = () => {\n  if (typeof window === 'undefined' && typeof process === 'object') {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst isBrowser = () => !isNode();\n\nconst jwtDecodeClaims = jwt => {\n  const parts = jwt.split('.');\n\n  if (parts.length !== 3) {\n    throw new Error('invalid jwt');\n  }\n\n  const claims = JSON.parse(Base64.decode(parts[1]));\n  return claims;\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar logLevel;\n\n(function (logLevel) {\n  logLevel[logLevel[\"DEBUG\"] = 1] = \"DEBUG\";\n  logLevel[logLevel[\"INFO\"] = 2] = \"INFO\";\n  logLevel[logLevel[\"WARN\"] = 3] = \"WARN\";\n  logLevel[logLevel[\"ERROR\"] = 4] = \"ERROR\";\n  logLevel[logLevel[\"DISABLED\"] = 5] = \"DISABLED\";\n})(logLevel || (logLevel = {}));\n\nclass Logger {\n  constructor(config) {\n    this.config = config;\n    this.logLevel = void 0;\n    this.configure(config);\n  }\n\n  configure(config) {\n    this.config = _extends({}, this.config, config);\n\n    switch (this.config.logLevel) {\n      case 'DEBUG':\n        this.logLevel = logLevel.DEBUG;\n        break;\n\n      case 'INFO':\n        this.logLevel = logLevel.INFO;\n        break;\n\n      case 'WARN':\n        this.logLevel = logLevel.WARN;\n        break;\n\n      case 'ERROR':\n        this.logLevel = logLevel.ERROR;\n        break;\n\n      case 'DISABLED':\n        this.logLevel = logLevel.DISABLED;\n        break;\n\n      default:\n        this.logLevel = logLevel.INFO;\n        break;\n    } // undefined silence value will disable the default silence flag\n\n\n    if (this.config.silence === undefined) {\n      this.config.silence = false;\n    }\n  }\n\n  debug(message, ...optionalParams) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel === logLevel.DEBUG) {\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  info(message, ...optionalParams) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.INFO) {\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  warn(message, ...optionalParams) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.WARN) {\n      console.warn(message, ...optionalParams);\n\n      if (this.config.onwarn) {\n        this.config.onwarn(message, optionalParams);\n      }\n    }\n  }\n\n  error(message, ...optionalParams) {\n    if (this.config.silence === true) return;\n\n    if (this.logLevel <= logLevel.ERROR) {\n      console.error(message, ...optionalParams);\n\n      if (this.config.onerror) {\n        this.config.onerror(message, optionalParams);\n      }\n    }\n  }\n\n}\nconst logger = new Logger({\n  logLevel: 'INFO',\n  // By default we silence the logger. In tests we should call `configureLogger`\n  // below to set silence: false.\n  silence: true\n});\nconst configureLogger = config => logger.configure(config);\n\nfunction promisify(f, thisContext) {\n  return function (...a) {\n    const args = Array.prototype.slice.call(a);\n    return new Promise(async (resolve, reject) => {\n      try {\n        args.push((err, result) => err ? reject(err) : resolve(result));\n        await f.apply(thisContext, args);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n}\n\nconst getRandomInt = (min = 0, max = Number.MAX_SAFE_INTEGER) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction queryStringFromObject(name, obj) {\n  const k = encodeURIComponent(name);\n  const v = encodeURIComponent(JSON.stringify(obj));\n  return `${k}=${v}`;\n}\nfunction queryStringToObject(qs) {\n  const p = qs.split('&');\n  const o = {};\n\n  for (const v of p) {\n    const z = v.split('=');\n    o[decodeURIComponent(z[0])] = JSON.parse(decodeURIComponent(z[1]));\n  }\n\n  return o;\n}\n\n// sanitizeNumberString accepts a number string and returns back a clean number string.\n// For example, input '1234.5678' will return '1234.5678' but '12javascript:{}etc' will return '12'\nconst sanitizeNumberString = numString => {\n  if (!numString || typeof numString !== 'string') {\n    return '';\n  }\n\n  const v = numString.match(/[\\d.]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n}; // sanitizeAlphanumeric accepts any string and returns alphanumeric contents only\n\nconst sanitizeAlphanumeric = alphanum => {\n  if (!alphanum || typeof alphanum !== 'string') {\n    return '';\n  }\n\n  const v = alphanum.match(/[\\w\\s\\d]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n}; // sanitizeHost accepts any string and returns valid host string\n\nconst sanitizeHost = host => {\n  if (!host || typeof host !== 'string') {\n    return '';\n  }\n\n  const v = host.match(/[\\w\\d.\\-:\\/]+/);\n  return v && v.length > 0 ? v[0].trim() : '';\n};\n\nconst sleep = t => {\n  return new Promise(resolve => {\n    const timeout = setTimeout(() => {\n      clearTimeout(timeout);\n      resolve();\n    }, t);\n  });\n};\n\nconst encodeTypedDataHash = typedData => {\n  const types = _extends({}, typedData.types); // remove EIP712Domain key from types as ethers will auto-gen it in\n  // the hash encoder below\n\n\n  delete types['EIP712Domain'];\n  return ethers.utils._TypedDataEncoder.hash(typedData.domain, types, typedData.message);\n};\nconst encodeTypedDataDigest = typedData => {\n  return ethers.utils.arrayify(encodeTypedDataHash(typedData));\n};\n\n// urlClean removes double slashes from url path\nconst urlClean = url => url.replace(/([^:]\\/)\\/+/g, '$1');\n\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n}\n\nexport { Logger, base64Decode, base64DecodeObject, base64Encode, base64EncodeObject, configureLogger, encodeMessageDigest, encodeTypedDataDigest, encodeTypedDataHash, getRandomInt, isBigNumberish, isBrowser, isNode, jwtDecodeClaims, logger, packMessageData, promisify, queryStringFromObject, queryStringToObject, sanitizeAlphanumeric, sanitizeHost, sanitizeNumberString, sleep, subDigestOf, urlClean };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}