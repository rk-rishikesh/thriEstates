{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/* eslint-disable */\n// guardd v0.1.0 8d4d548d0af400f36ef39a21c29927fe65f9396c\n// --\n// This file has been generated by https://github.com/webrpc/webrpc using gen/typescript\n// Do not edit by hand. Update your webrpc schema and re-generate.\n// WebRPC description and code-gen version\n\n\nconst WebRPCVersion = \"v1\"; // Schema version of your RIDL schema\n\nconst WebRPCSchemaVersion = \"v0.1.0\"; // Schema hash generated from your RIDL schema\n\nconst WebRPCSchemaHash = \"8d4d548d0af400f36ef39a21c29927fe65f9396c\"; //\n// Types\n//\n//\n// Client\n//\n\nclass GuarddService {\n  constructor(hostname, fetch) {\n    this.hostname = void 0;\n    this.fetch = void 0;\n    this.path = '/rpc/GuarddService/';\n\n    this.sign = (args, headers) => {\n      return this.fetch(this.url('Sign'), createHTTPRequest(args, headers)).then(res => {\n        return buildResponse(res).then(_data => {\n          return {\n            sig: _data.sig\n          };\n        });\n      });\n    };\n\n    this.hostname = hostname;\n    this.fetch = fetch;\n  }\n\n  url(name) {\n    return this.hostname + this.path + name;\n  }\n\n}\n\nconst createHTTPRequest = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    method: 'POST',\n    headers: _extends({}, headers, {\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(body || {})\n  };\n};\n\nconst buildResponse = res => {\n  return res.text().then(text => {\n    let data;\n\n    try {\n      data = JSON.parse(text);\n    } catch (err) {\n      throw {\n        code: 'unknown',\n        msg: `expecting JSON, got: ${text}`,\n        status: res.status\n      };\n    }\n\n    if (!res.ok) {\n      throw data; // webrpc error response\n    }\n\n    return data;\n  });\n};\n\nexport { GuarddService, WebRPCSchemaHash, WebRPCSchemaVersion, WebRPCVersion };","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","WebRPCVersion","WebRPCSchemaVersion","WebRPCSchemaHash","GuarddService","constructor","hostname","fetch","path","sign","args","headers","url","createHTTPRequest","then","res","buildResponse","_data","sig","name","body","method","JSON","stringify","text","data","parse","err","code","msg","status","ok"],"sources":["C:/Users/rishi/contract-poc/ThriEstate/Brandvilla/node_modules/@0xsequence/guard/dist/0xsequence-guard.esm.js"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/* eslint-disable */\n// guardd v0.1.0 8d4d548d0af400f36ef39a21c29927fe65f9396c\n// --\n// This file has been generated by https://github.com/webrpc/webrpc using gen/typescript\n// Do not edit by hand. Update your webrpc schema and re-generate.\n// WebRPC description and code-gen version\nconst WebRPCVersion = \"v1\"; // Schema version of your RIDL schema\n\nconst WebRPCSchemaVersion = \"v0.1.0\"; // Schema hash generated from your RIDL schema\n\nconst WebRPCSchemaHash = \"8d4d548d0af400f36ef39a21c29927fe65f9396c\"; //\n// Types\n//\n\n//\n// Client\n//\nclass GuarddService {\n  constructor(hostname, fetch) {\n    this.hostname = void 0;\n    this.fetch = void 0;\n    this.path = '/rpc/GuarddService/';\n\n    this.sign = (args, headers) => {\n      return this.fetch(this.url('Sign'), createHTTPRequest(args, headers)).then(res => {\n        return buildResponse(res).then(_data => {\n          return {\n            sig: _data.sig\n          };\n        });\n      });\n    };\n\n    this.hostname = hostname;\n    this.fetch = fetch;\n  }\n\n  url(name) {\n    return this.hostname + this.path + name;\n  }\n\n}\n\nconst createHTTPRequest = (body = {}, headers = {}) => {\n  return {\n    method: 'POST',\n    headers: _extends({}, headers, {\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(body || {})\n  };\n};\n\nconst buildResponse = res => {\n  return res.text().then(text => {\n    let data;\n\n    try {\n      data = JSON.parse(text);\n    } catch (err) {\n      throw {\n        code: 'unknown',\n        msg: `expecting JSON, got: ${text}`,\n        status: res.status\n      };\n    }\n\n    if (!res.ok) {\n      throw data; // webrpc error response\n    }\n\n    return data;\n  });\n};\n\nexport { GuarddService, WebRPCSchemaHash, WebRPCSchemaVersion, WebRPCVersion };\n"],"mappings":"AAAA,SAASA,QAAT,GAAoB;EAClBA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;IAC5C,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;MACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;MAEA,KAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;QACtB,IAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;UACrDL,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;QACD;MACF;IACF;;IAED,OAAOL,MAAP;EACD,CAZD;;EAcA,OAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,aAAa,GAAG,IAAtB,C,CAA4B;;AAE5B,MAAMC,mBAAmB,GAAG,QAA5B,C,CAAsC;;AAEtC,MAAMC,gBAAgB,GAAG,0CAAzB,C,CAAqE;AACrE;AACA;AAEA;AACA;AACA;;AACA,MAAMC,aAAN,CAAoB;EAClBC,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;IAC3B,KAAKD,QAAL,GAAgB,KAAK,CAArB;IACA,KAAKC,KAAL,GAAa,KAAK,CAAlB;IACA,KAAKC,IAAL,GAAY,qBAAZ;;IAEA,KAAKC,IAAL,GAAY,CAACC,IAAD,EAAOC,OAAP,KAAmB;MAC7B,OAAO,KAAKJ,KAAL,CAAW,KAAKK,GAAL,CAAS,MAAT,CAAX,EAA6BC,iBAAiB,CAACH,IAAD,EAAOC,OAAP,CAA9C,EAA+DG,IAA/D,CAAoEC,GAAG,IAAI;QAChF,OAAOC,aAAa,CAACD,GAAD,CAAb,CAAmBD,IAAnB,CAAwBG,KAAK,IAAI;UACtC,OAAO;YACLC,GAAG,EAAED,KAAK,CAACC;UADN,CAAP;QAGD,CAJM,CAAP;MAKD,CANM,CAAP;IAOD,CARD;;IAUA,KAAKZ,QAAL,GAAgBA,QAAhB;IACA,KAAKC,KAAL,GAAaA,KAAb;EACD;;EAEDK,GAAG,CAACO,IAAD,EAAO;IACR,OAAO,KAAKb,QAAL,GAAgB,KAAKE,IAArB,GAA4BW,IAAnC;EACD;;AAtBiB;;AA0BpB,MAAMN,iBAAiB,GAAG,YAA6B;EAAA,IAA5BO,IAA4B,uEAArB,EAAqB;EAAA,IAAjBT,OAAiB,uEAAP,EAAO;EACrD,OAAO;IACLU,MAAM,EAAE,MADH;IAELV,OAAO,EAAEvB,QAAQ,CAAC,EAAD,EAAKuB,OAAL,EAAc;MAC7B,gBAAgB;IADa,CAAd,CAFZ;IAKLS,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAI,IAAI,EAAvB;EALD,CAAP;AAOD,CARD;;AAUA,MAAMJ,aAAa,GAAGD,GAAG,IAAI;EAC3B,OAAOA,GAAG,CAACS,IAAJ,GAAWV,IAAX,CAAgBU,IAAI,IAAI;IAC7B,IAAIC,IAAJ;;IAEA,IAAI;MACFA,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAWF,IAAX,CAAP;IACD,CAFD,CAEE,OAAOG,GAAP,EAAY;MACZ,MAAM;QACJC,IAAI,EAAE,SADF;QAEJC,GAAG,EAAG,wBAAuBL,IAAK,EAF9B;QAGJM,MAAM,EAAEf,GAAG,CAACe;MAHR,CAAN;IAKD;;IAED,IAAI,CAACf,GAAG,CAACgB,EAAT,EAAa;MACX,MAAMN,IAAN,CADW,CACC;IACb;;IAED,OAAOA,IAAP;EACD,CAlBM,CAAP;AAmBD,CApBD;;AAsBA,SAASrB,aAAT,EAAwBD,gBAAxB,EAA0CD,mBAA1C,EAA+DD,aAA/D"},"metadata":{},"sourceType":"module"}