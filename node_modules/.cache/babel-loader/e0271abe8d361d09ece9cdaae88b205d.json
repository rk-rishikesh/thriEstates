{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\contract-poc\\\\ThriEstate\\\\Brandvilla\\\\src\\\\contexts\\\\IPFS.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { NFTStorage, File } from \"nft.storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IPFSContext = /*#__PURE__*/createContext({});\nexport function IPFSContextProvider(props) {\n  _s();\n\n  const [IPFSuploading, setIPFSuploading] = useState(false);\n  const [IPFSerror, setIPFSerror] = useState(null);\n\n  async function IPFSupload(data, file) {\n    try {\n      setIPFSerror(null);\n      setIPFSuploading(true);\n      const client = new NFTStorage({\n        token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEYxMjRGNzViYzgwMWE1MmVENTkxQzRBNjVkRWVjMEUxMkVjZTgxRGEiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY1ODIwNTU0OTA0MywibmFtZSI6IkJyYW5kVmlsbGEifQ.JDMQvijY7xLoPahhx8RhWkfZBG8gY9c1-EG-gJ259dE\"\n      });\n      console.log(new File([file], file.name, {\n        type: file.type\n      }));\n      const metadata = await client.store({\n        name: data.name,\n        description: data.description,\n        image: new File([file], file.name, {\n          type: file.type\n        })\n      });\n      console.log(metadata);\n      return metadata.url;\n    } catch (error) {\n      console.error(error);\n      setIPFSerror(error);\n    } finally {\n      setIPFSuploading(false);\n    }\n  }\n\n  async function invoiceUpload(data) {\n    try {\n      setIPFSerror(null);\n      setIPFSuploading(true);\n      const client = new NFTStorage({\n        token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEYxMjRGNzViYzgwMWE1MmVENTkxQzRBNjVkRWVjMEUxMkVjZTgxRGEiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY1ODIwNTU0OTA0MywibmFtZSI6IkJyYW5kVmlsbGEifQ.JDMQvijY7xLoPahhx8RhWkfZBG8gY9c1-EG-gJ259dE\"\n      });\n      var file = \"\";\n      const metadata = await client.store({\n        name: data.name,\n        description: \"Invoice generated by BrandVilla\",\n        details: {\n          orderDate: data.today,\n          shippingAddress: {\n            firstName: data.firstName,\n            lastName: data.lastName,\n            emailID: data.emailID,\n            contactNumber: data.contactNumber,\n            address: data.address,\n            city: data.city,\n            country: data.country,\n            postalCode: data.postalCode\n          },\n          totalCost: data.totalCost\n        },\n        image: new File([file], file.name, {\n          type: file.type\n        })\n      });\n      console.log(metadata);\n      return metadata.url;\n    } catch (error) {\n      console.error(error);\n      setIPFSerror(error);\n    } finally {\n      setIPFSuploading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(IPFSContext.Provider, {\n    value: {\n      IPFSuploading,\n      IPFSerror,\n      IPFSupload,\n      invoiceUpload\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IPFSContextProvider, \"Qxrqi+zcFywuGQQBi2rpVRwZMMU=\");\n\n_c = IPFSContextProvider;\nexport function useIPFS() {\n  _s2();\n\n  return useContext(IPFSContext);\n}\n\n_s2(useIPFS, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"IPFSContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","NFTStorage","File","IPFSContext","IPFSContextProvider","props","IPFSuploading","setIPFSuploading","IPFSerror","setIPFSerror","IPFSupload","data","file","client","token","console","log","name","type","metadata","store","description","image","url","error","invoiceUpload","details","orderDate","today","shippingAddress","firstName","lastName","emailID","contactNumber","address","city","country","postalCode","totalCost","children","useIPFS"],"sources":["C:/Users/rishi/contract-poc/ThriEstate/Brandvilla/src/contexts/IPFS.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { NFTStorage, File } from \"nft.storage\";\r\n\r\nconst IPFSContext = createContext({});\r\n\r\nexport function IPFSContextProvider(props) {\r\n  const [IPFSuploading, setIPFSuploading] = useState(false);\r\n  const [IPFSerror, setIPFSerror] = useState(null);\r\n\r\n  async function IPFSupload(data, file) {\r\n    try {\r\n      setIPFSerror(null);\r\n      setIPFSuploading(true);\r\n      const client = new NFTStorage({\r\n        token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEYxMjRGNzViYzgwMWE1MmVENTkxQzRBNjVkRWVjMEUxMkVjZTgxRGEiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY1ODIwNTU0OTA0MywibmFtZSI6IkJyYW5kVmlsbGEifQ.JDMQvijY7xLoPahhx8RhWkfZBG8gY9c1-EG-gJ259dE\"\r\n      });\r\n      console.log(new File([file], file.name, { type: file.type }))\r\n      const metadata = await client.store({\r\n        name: data.name,\r\n        description: data.description,\r\n        image: new File([file], file.name, { type: file.type })\r\n      });\r\n      console.log(metadata);\r\n      return metadata.url;\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIPFSerror(error);\r\n    } finally {\r\n      setIPFSuploading(false);\r\n    }\r\n  }\r\n\r\n  async function invoiceUpload(data) {\r\n    try {\r\n      setIPFSerror(null);\r\n      setIPFSuploading(true);\r\n      const client = new NFTStorage({\r\n        token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweEYxMjRGNzViYzgwMWE1MmVENTkxQzRBNjVkRWVjMEUxMkVjZTgxRGEiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY1ODIwNTU0OTA0MywibmFtZSI6IkJyYW5kVmlsbGEifQ.JDMQvijY7xLoPahhx8RhWkfZBG8gY9c1-EG-gJ259dE\"\r\n      });\r\n      var file = \"\"\r\n      const metadata = await client.store({\r\n        name: data.name,\r\n        description: \"Invoice generated by BrandVilla\",\r\n        details: {\r\n          orderDate: data.today,\r\n          shippingAddress: {\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            emailID: data.emailID,\r\n            contactNumber: data.contactNumber,\r\n            address: data.address,\r\n            city: data.city,\r\n            country: data.country,\r\n            postalCode: data.postalCode\r\n          },\r\n          totalCost: data.totalCost\r\n        },\r\n        image: new File([file], file.name, { type: file.type })\r\n      });\r\n\r\n      console.log(metadata);\r\n      return metadata.url;\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIPFSerror(error);\r\n    } finally {\r\n      setIPFSuploading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IPFSContext.Provider value={{ IPFSuploading, IPFSerror, IPFSupload, invoiceUpload }}>\r\n      {props.children}\r\n    </IPFSContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useIPFS() {\r\n  return useContext(IPFSContext);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}