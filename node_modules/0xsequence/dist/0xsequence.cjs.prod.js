'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var abi$1 = require('@0xsequence/abi');
var api$1 = require('@0xsequence/api');
var auth$1 = require('@0xsequence/auth');
var config$1 = require('@0xsequence/config');
var guard$1 = require('@0xsequence/guard');
var indexer$1 = require('@0xsequence/indexer');
var metadata$1 = require('@0xsequence/metadata');
var multicall$1 = require('@0xsequence/multicall');
var network$1 = require('@0xsequence/network');
var provider$1 = require('@0xsequence/provider');
var relayer$1 = require('@0xsequence/relayer');
var transactions$1 = require('@0xsequence/transactions');
var utils$1 = require('@0xsequence/utils');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

function _mergeNamespaces(n, m) {
  m.forEach(function (e) {
    e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {
      if (k !== 'default' && !(k in n)) {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  });
  return Object.freeze(n);
}

var abi__namespace = /*#__PURE__*/_interopNamespace(abi$1);
var api__namespace = /*#__PURE__*/_interopNamespace(api$1);
var auth__namespace = /*#__PURE__*/_interopNamespace(auth$1);
var config__namespace = /*#__PURE__*/_interopNamespace(config$1);
var guard__namespace = /*#__PURE__*/_interopNamespace(guard$1);
var indexer__namespace = /*#__PURE__*/_interopNamespace(indexer$1);
var metadata__namespace = /*#__PURE__*/_interopNamespace(metadata$1);
var multicall__namespace = /*#__PURE__*/_interopNamespace(multicall$1);
var network__namespace = /*#__PURE__*/_interopNamespace(network$1);
var provider__namespace = /*#__PURE__*/_interopNamespace(provider$1);
var relayer__namespace = /*#__PURE__*/_interopNamespace(relayer$1);
var transactions__namespace = /*#__PURE__*/_interopNamespace(transactions$1);
var utils__namespace = /*#__PURE__*/_interopNamespace(utils$1);

var abi = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [abi__namespace]));

var api = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [api__namespace]));

var auth = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [auth__namespace]));

var config = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [config__namespace]));

var guard = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [guard__namespace]));

var indexer = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [indexer__namespace]));

var metadata = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [metadata__namespace]));

var multicall = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [multicall__namespace]));

var network = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [network__namespace]));

var provider = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [provider__namespace]));

var relayer = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [relayer__namespace]));

var transactions = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [transactions__namespace]));

var utils = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null,
  isValidSignature: provider$1.isValidSignature,
  isValidMessageSignature: provider$1.isValidMessageSignature,
  isValidTypedDataSignature: provider$1.isValidTypedDataSignature,
  recoverWalletConfig: provider$1.recoverWalletConfig,
  isWalletUpToDate: provider$1.isWalletUpToDate
}, [utils__namespace]));

var sequence = /*#__PURE__*/Object.freeze({
  __proto__: null,
  abi: abi,
  api: api,
  auth: auth,
  config: config,
  guard: guard,
  indexer: indexer,
  metadata: metadata,
  multicall: multicall,
  network: network,
  provider: provider,
  relayer: relayer,
  transactions: transactions,
  utils: utils,
  initWallet: provider$1.initWallet,
  getWallet: provider$1.getWallet,
  Wallet: provider$1.Wallet
});

Object.defineProperty(exports, 'Wallet', {
  enumerable: true,
  get: function () { return provider$1.Wallet; }
});
exports.sequence = sequence;
