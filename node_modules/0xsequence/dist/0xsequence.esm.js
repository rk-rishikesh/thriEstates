import * as abi$1 from '@0xsequence/abi';
import * as api$1 from '@0xsequence/api';
import * as auth$1 from '@0xsequence/auth';
import * as config$1 from '@0xsequence/config';
import * as guard$1 from '@0xsequence/guard';
import * as indexer$1 from '@0xsequence/indexer';
import * as metadata$1 from '@0xsequence/metadata';
import * as multicall$1 from '@0xsequence/multicall';
import * as network$1 from '@0xsequence/network';
import * as provider$1 from '@0xsequence/provider';
import { isValidSignature, isValidMessageSignature, isValidTypedDataSignature, recoverWalletConfig, isWalletUpToDate, initWallet, getWallet, Wallet } from '@0xsequence/provider';
export { Wallet } from '@0xsequence/provider';
import * as relayer$1 from '@0xsequence/relayer';
import * as transactions$1 from '@0xsequence/transactions';
import * as utils$1 from '@0xsequence/utils';

function _mergeNamespaces(n, m) {
  m.forEach(function (e) {
    e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {
      if (k !== 'default' && !(k in n)) {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  });
  return Object.freeze(n);
}

var abi = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [abi$1]));

var api = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [api$1]));

var auth = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [auth$1]));

var config = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [config$1]));

var guard = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [guard$1]));

var indexer = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [indexer$1]));

var metadata = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [metadata$1]));

var multicall = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [multicall$1]));

var network = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [network$1]));

var provider = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [provider$1]));

var relayer = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [relayer$1]));

var transactions = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null
}, [transactions$1]));

var utils = /*#__PURE__*/Object.freeze(/*#__PURE__*/_mergeNamespaces({
  __proto__: null,
  isValidSignature: isValidSignature,
  isValidMessageSignature: isValidMessageSignature,
  isValidTypedDataSignature: isValidTypedDataSignature,
  recoverWalletConfig: recoverWalletConfig,
  isWalletUpToDate: isWalletUpToDate
}, [utils$1]));

var sequence = /*#__PURE__*/Object.freeze({
  __proto__: null,
  abi: abi,
  api: api,
  auth: auth,
  config: config,
  guard: guard,
  indexer: indexer,
  metadata: metadata,
  multicall: multicall,
  network: network,
  provider: provider,
  relayer: relayer,
  transactions: transactions,
  utils: utils,
  initWallet: initWallet,
  getWallet: getWallet,
  Wallet: Wallet
});

export { sequence };
